<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"                  
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">


    <Style x:Key="baseButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="basePasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border
                        Padding="20,0,0,0" >

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                        
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style 
        x:Key="windowButtonStyle" 
        TargetType="Button"
        BasedOn="{StaticResource baseButtonStyle}">

        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="3" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style 
        x:Key="CloseButtonStyle" 
        TargetType="Button"
        BasedOn="{StaticResource windowButtonStyle}" >

        <Setter Property="Background" Value="PaleVioletRed" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        CornerRadius="4"
                        
                        Background="{TemplateBinding Background}">

                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFA6A6" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style 
        x:Key="MininizeButtonStyle" 
        BasedOn="{StaticResource windowButtonStyle}" 
        TargetType="Button">
        
        <Setter Property="Background" Value="SteelBlue" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        CornerRadius="4"
                        
                        Background="{TemplateBinding Background}">

                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#A6D6FF" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="NameText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>


    <Style 
        x:Key="MenuButtonStyle"
        TargetType="Button"
        BasedOn="{StaticResource baseButtonStyle}">

        <Setter Property="Height" Value="70" />
        <Setter Property="Margin" Value="-7,0,0,5" />

        
        <Setter Property="Foreground" Value="White" />

        
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                      
                        BorderThickness="4,0,0,0"
                        BorderBrush="{TemplateBinding BorderBrush}" >

                        <ContentPresenter
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--<EventTrigger 
                RoutedEvent="Button.SizeChanged">
                <SoundPlayerAction Source="E:\NewRepos\CourseProjectOpp\Resources\Sounds\menu_button_choiced.wav" />
            </EventTrigger>-->

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,7" />
                <Setter 
                    Property="Foreground"           
                    Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
                <Setter 
                    Property="BorderBrush" 
                    Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Cursor" Value="Hand" />
                
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Margin" Value="0,0,0,7" />
                
                <Setter 
                    Property="Foreground"           
                    Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
                <Setter 
                    Property="BorderBrush" 
                    Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
            </Trigger>

           

        </Style.Triggers>
        
    </Style>

    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="27"/>
        <Setter Property="Height" Value="27"/>
        <Setter Property="Margin" Value="35,0,20,0"/>
    </Style>

    <Style x:Key="MenuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>


    <Style
        x:Key="ProductButtonStyle"
        TargetType="Button"
        BasedOn="{StaticResource baseButtonStyle}">

        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush
                    StartPoint="0,0"
                    EndPoint="1,1"
                    Opacity="0.85">

                    <GradientStop Color="#999999" Offset="0" />
                    <GradientStop Color="White" Offset="0.75" />
                    <GradientStop Color="#999999" Offset="1" />

                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        BorderThickness="5"
                        BorderBrush="Gray"
                        CornerRadius="9"
                        
                        Background="{TemplateBinding Background}">

                        <ContentPresenter
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush
                                            StartPoint="0,0"
                                            EndPoint="1,1"
                                            Opacity="0.85">

                                        <GradientStop Color="#505050" Offset="0" />
                                        <GradientStop Color="#888888" Offset="0.75" />
                                        <GradientStop Color="#505050" Offset="1" />

                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>

                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="BackButtonStyle"
        TargetType="Button"
        BasedOn="{StaticResource baseButtonStyle}">

        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border              
                        Background="{TemplateBinding Background}">

                        <ContentPresenter
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch" />

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">

                            <Setter 
                                Property="Foreground"           
                                Value="#303030" />

                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter 
                                Property="Foreground"           
                                Value="Gray" />
                           
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>



                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="backButtonIcon" TargetType="fa:IconImage">
        <Setter 
            Property="Foreground" 
            Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
    </Style>


    <Style x:Key="ProductButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>


    <Style
        x:Key="RegistrateButtonStyle"
        TargetType="Button"
        BasedOn="{StaticResource baseButtonStyle}">

        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border              
                        Background="{TemplateBinding Background}">

                        <ContentPresenter
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter 
                                Property="Foreground"           
                                Value="Gray" />

                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="CheckPass" 
        TargetType="CheckBox" >

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <fa:IconImage>
                            <fa:IconImage.Style>
                                <Style TargetType="fa:IconImage">
                                    <Setter Property="Width" Value="19" />
                                    <Setter Property="Height" Value="19" />
                                    <Setter Property="Foreground" Value="White" />

                                    <Setter 
                                        Property="Icon" 
                                        Value="EyeSlash" />

                                    <Style.Triggers>
                                        <DataTrigger 
                                            Binding="{Binding IsChecked, 
                                                              RelativeSource={RelativeSource AncestorType={x:Type CheckBox}}}"
                                            Value="True">

                                            <Setter 
                                                Property="Icon" 
                                                Value="Eye" />

                                            <Setter Property="Width" Value="18" />
                                            <Setter Property="Height" Value="18" />

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </fa:IconImage.Style>
                        </fa:IconImage>

                        <ContentPresenter 
                            Content="{TemplateBinding Content}" 
                            Margin="5,0,0,0" />

                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Border" x:Key="RacePitBorderStyle" >
        <Style.Resources>
            <LinearGradientBrush x:Key="BackBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Color="#303030" Offset="0.1" />
                <GradientStop Color="#606060" Offset="0.9" />
            </LinearGradientBrush>
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource BackBrush}"/>
        <Setter Property="BorderBrush" Value="#252525" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="3"/>
    </Style>

    <DataTemplate x:Key="titleText">
        <Border Style="{StaticResource RacePitBorderStyle}" Height="60">
            <StackPanel Orientation="Horizontal">

            <fa:IconImage 
                Margin="10"
                Foreground="White"
                Height="20"
                Width="20"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Icon="{Binding
                RelativeSource={RelativeSource
                Mode=FindAncestor,
                AncestorType={x:Type Expander}},
                Path=Tag}"/>

            <TextBlock 
                Text="{Binding}" 
                Margin="10"
                VerticalAlignment="Center"
                Foreground="White"
                FontSize="20"
                FontWeight="Medium"
                FontFamily="Montserrat"
                    
                Width="{Binding
                RelativeSource={RelativeSource
                Mode=FindAncestor,
                AncestorType={x:Type Expander}},
                Path=ActualWidth}"
                TextWrapping="Wrap"/>
            
            </StackPanel>
        </Border>
    </DataTemplate>


    <Style TargetType="{x:Type Expander}" x:Key="exp">
        <Style.Resources>
            <LinearGradientBrush
                x:Key="BackBrush"
                    StartPoint="0,0"
                    EndPoint="1,1"
                    Opacity="0.85">

                <GradientStop Color="#999999" Offset="0" />
                <GradientStop Color="White" Offset="0.75" />
                <GradientStop Color="#999999" Offset="1" />

            </LinearGradientBrush>
        </Style.Resources>
        
        
        <Setter Property="HeaderTemplate" Value="{StaticResource titleText}"/>
        <Setter Property="Background" Value="{StaticResource BackBrush}" />
    </Style>

    

    <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
        <Setter Property="Foreground" Value="#FFB3B3B3"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <!--<Setter Property="Template" Value="{DynamicResource DataGridRowControlTemplate1}"/>-->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#FF262626"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#FF383838"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="#FF333333"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="DataGrid" x:Key="dataGridStyle">

        <Setter Property="BorderBrush" Value="#DDDDDD" />
        <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
        <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />

        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style  TargetType="DataGridColumnHeader">
                    <Setter Property="Padding" Value="4" />
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="Background" Value="#404040"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontSize" Value="19" />
                    <Setter Property="FontFamily" Value="Montserrat" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="ToolTip" Value="Click to sort."/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
                
        
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightCyan" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
   
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#ff66ccff" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#ff66ccff" />
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>

                    <Setter Property="Padding" Value="4,3,4,3" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style TargetType="Control">
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>